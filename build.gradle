plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'maven-publish' // Add Maven Publish plugin
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.13'
    testImplementation 'junit:junit:4.13'

    implementation 'de.articdive:jnoise-core:4.1.0'

    implementation 'com.h2database:h2:2.2.224'
    testImplementation 'com.h2database:h2:2.2.224'


    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.7.2'
    testImplementation 'org.postgresql:postgresql:42.7.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

}

test {
    group = '__QUICK__ACCESS__'
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

// Integration Tests
task integrationTest(type: Test) {
    group = '__QUICK__ACCESS__'
    useTestNG()
    include '**/*IntegrationTest.*'
}

// Static Code Analysis (Checkstyle)
checkstyle {
    toolVersion = '10.4'
    configFile = file("${rootDir}/guidelines/code/google_checks.xml")
}

// Code Coverage (Jacoco)
jacoco {
    toolVersion = '0.8.7'
}

// Task for generating code coverage reports
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }

    dependsOn = ['test', 'integrationTest']
}

// Maven Publishing Configuration
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'edu.p'
            artifactId = 'lernfeld-8'
            if(project.hasProperty('snapshot')) {
                version = version + '-SNAPSHOT'
            } else {
                version = version
            }
        }
    }

    repositories {
        maven {
            if(project.hasProperty('snapshot')) {
                url = uri("http://nexus:8081/repository/maven-snapshots/")
            } else {
                url = uri("http://nexus:8081/repository/maven-releases/")
            }
            allowInsecureProtocol true
            credentials {
                username = "admin"
                password = "admin"
            }
        }
    }
}

task copyResources(type: Copy) {
    from 'src/main/resources'
    into 'build/libs/resources'
}

task startJar(type: Exec, dependsOn: jar) {
    group = '__QUICK__ACCESS__'
    commandLine 'java', '-jar', 'lernfeld-8-Project-1.1.0.0.jar'
    workingDir = file('build/libs')
}

jar {
    from('src/main/resources') {
        include '**/*.*'
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': 'edu.p.eight.Main'
        )
    }
    dependsOn copyResources
}
